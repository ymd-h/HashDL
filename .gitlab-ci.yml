variables: &global-variables
  CXX: "g++ -std=c++20 -O3 -march=native -Wall -Wextra -IHashDL -ltbb"
  CC: "g++ -std=c++20 -O3 -march=native -Wall -Wextra -IHashDL -ltbb"
  COVERAGE_RCFILE: .coveragerc
  DOCKER_BUILDKIT: 1
  GIT_DEPTH: 1
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.pip"

stages:
  - cpptest
  - build
  - pytest


activation.cc:
  variables:
    <<: *global-variables
    SOURCE: activation
  stage: cpptest
  image: gcc:10
  script:
    - apt update && apt install -y libtbb-dev
    - $CXX -o test/test_$SOURCE.{out,cc}
    - ./test/test_$SOURCE.out

data.cc:
  variables:
    <<: *global-variables
    SOURCE: data
  stage: cpptest
  image: gcc:10
  script:
    - apt update && apt install -y libtbb-dev
    - $CXX -o test/test_$SOURCE.{out,cc}
    - ./test/test_$SOURCE.out

optimizer.cc:
  variables:
    <<: *global-variables
    SOURCE: optimizer
  stage: cpptest
  image: gcc:10
  script:
    - apt update && apt install -y libtbb-dev
    - $CXX -o test/test_$SOURCE.{out,cc}
    - ./test/test_$SOURCE.out

scheduler.cc:
  variables:
    <<: *global-variables
    SOURCE: scheduler
  stage: cpptest
  image: gcc:10
  script:
    - apt update && apt install -y libtbb-dev
    - $CXX -o test/test_$SOURCE.{out,cc}
    - ./test/test_$SOURCE.out

wheelbuild:
  stage: build
  image: gcc:10
  script:
    - apt update && apt install -y python3-dev python3-pip libtbb-dev
    - pip3 wheel -w dist --no-deps .
  artifacts:
    paths:
      - dist/HashDL-*.whl

unittest:
  stage: pytest
  image: gcc:10
  script:
    - apt update && apt install -y python3-dev python3-pip libtbb-dev
    - pip3 install dist/HashDL-*.whl
    - python3 test/test_HashDL.py
